/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package extractor;

/**
 *
 * @author Odetutu
 */
import java.io.*;
import javax.swing.JFileChooser;
import javax.swing.UIManager;

import org.pdfbox.pdfparser.PDFParser; 
import org.pdfbox.pdmodel.*; 
import org.pdfbox.util.PDFTextStripper; 

import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;


public class ExtractMe extends javax.swing.JFrame {

    /**
     * Creates new form ExtractMe
     */
    JPanel[]panels;
    int tot_len = 0;
     BufferedWriter [] out;
    private JTextArea [] jTextArea2;
    private JScrollPane [] panes;
    private File [] selectedFile;
    private JFileChooser fc;
    private String file_name;
    private ArrayList<String[][]> al = new ArrayList<String[][]>();
    private ArrayList<String> myData = new ArrayList();
    private ArrayList<String> listClone = new ArrayList();
    private ArrayList<String> permList = new ArrayList();
    int counter;
    private static final String FILE_NAME = "/tmp/";
    
    public ExtractMe() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        
        
        
    }
    public final String getContent(final File f) { 
        // setType("PDF"); 
        Reader reader = null; 
        PDDocument pdfDocument = null; 
        FileInputStream fis = null; 
        String contents = null; 
        try { 
        System.out.println("Getting contents from PDF: " + f.getName()); 
        fis = new FileInputStream(f); 
        PDFParser parser = new PDFParser(fis); 
        parser.parse(); 
        pdfDocument = parser.getPDDocument(); 
        PDFTextStripper stripper = new PDFTextStripper(); 
        contents = stripper.getText(pdfDocument); 
        reader = new StringReader(contents); 
        } 
        catch (IOException e) { 
        System.out.println("Error: Can't open file: " + f.getName()); 
        } 
        return contents;
            } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setText("Load file...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Publish...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        fc = new JFileChooser();
        fc.setMultiSelectionEnabled(true);
        int ok = fc.showOpenDialog(ExtractMe.this);
        if(ok==JFileChooser.APPROVE_OPTION){
           selectedFile = fc.getSelectedFiles();
           tot_len = selectedFile.length;
           
           panels = new JPanel[tot_len];
           jTextArea2 = new JTextArea[tot_len];
           panes = new JScrollPane[tot_len];
        
            for(int k=0; k<tot_len; k++){
                panels[k] = new JPanel();
                jTextArea2[k] = new JTextArea(50, 50);
                jTextArea2[k].setLineWrap(true);
                jTextArea2[k].setWrapStyleWord(true);
                
                panes[k] = new JScrollPane(jTextArea2[k], JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
                //panes[k].setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
               
                //jTextArea2[k].setFont(new Font("Trajan pro",Font.BOLD,15));
                panels[k].add(jTextArea2[k]);
            }
           for(int c=0; c<tot_len; c++){
               jTabbedPane1.addTab(selectedFile[c].getName(), panels[c]);
           }
           for(int c = 0; c<tot_len; c++){
               jTextArea2[c].setText(getContent(selectedFile[c]));
           }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         try {
              out = new BufferedWriter[tot_len];
              for(int c=0; c<tot_len; c++){
                  out[c] = new BufferedWriter(new FileWriter(selectedFile[c].getName()+".txt"));
                  out[c].write(jTextArea2[c].getText());
                  out[c].close();
              }
              JOptionPane.showMessageDialog(this, "Conversion Message","Successfully Converted",JOptionPane.INFORMATION_MESSAGE);
             }catch(Exception e){
                 JOptionPane.showMessageDialog(this, "Conversion Error Message","Error " + e, JOptionPane.ERROR_MESSAGE);
             }
         System.out.println("Size is " + listClone.size());
         counter = 0;
        
        System.out.println("Data temporarily saved");
        
//         file_name = JOptionPane.showInputDialog(this, "Enter the file name", "Prompt message",JOptionPane.INFORMATION_MESSAGE);
//        
//        HSSFWorkbook workbook = new HSSFWorkbook();
//        HSSFSheet sheet = workbook.createSheet("Ward Sheet");
//        Object[][] datatypes = {
//                {"PVC", "Fullname", "Dob"},
//                {"12345678", "RAZAK Bello", 2},
//                {"float", "Primitive", 4},
//                {"double", "Primitive", 8},
//                {"char", "Primitive", 1},
//                {"String", "Non-Primitive", "No fixed size"}
//        };
//
//        int rowNum = 0;
//        System.out.println("Creating excel");
//
//        for (Object[] datatype : datatypes) {
//            Row row = sheet.createRow(rowNum++);
//            int colNum = 0;
//            for (Object field : datatype) {
//                Cell cell = row.createCell(colNum++);
//                if (field instanceof String) {
//                    cell.setCellValue((String) field);
//                } else if (field instanceof Integer) {
//                    cell.setCellValue((Integer) field);
//                }
//            }
//        }
//
//        try {
//            FileOutputStream outputStream = new FileOutputStream(FILE_NAME+file_name+".xls");
//            workbook.write(outputStream);
//        } catch (FileNotFoundException e) {
//            e.printStackTrace();
//        } catch (IOException e) {
//            e.printStackTrace();
//        }
//
//        System.out.println("Done");
//    
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        ExtractMe ex = new ExtractMe();
        ex.setVisible(true);
        try{
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
        e.printStackTrace();
        } 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
